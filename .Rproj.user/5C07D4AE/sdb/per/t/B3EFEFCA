{
    "collab_server" : "",
    "contents" : "\n#library(pROC) \n#library(class)\n#library(ggplot2)\n#library(ISLR)\n#library(boot)\nlibrary(leaps)\nlibrary(glmnet)\nlibrary(ggplot2)\n\nsource(\"Basic Mesa analysis.R\")\nsource(\"Code book v06.R\")\n\n\n#-------------------------------------------------------------------------------------------------------\n\n# Split data \n\nseed <- 2016\nset.seed(seed)\n\nmesa.use <- mesa.raw[mesa.raw$ACTUAL_13!=0,]\nmesa.other <- mesa.raw[mesa.raw$ACTUAL_13==0,]\n\nsplit <- sample(x = c(TRUE, FALSE), size = nrow(mesa.use), prob = c(.4,.6), replace = TRUE)\nmesa.train <-mesa.raw[split,]\nmesa.val <- mesa.raw[(split!=TRUE),]\n\nnrow(mesa.train) + nrow(mesa.val)\nnrow(mesa.raw)\n\nhead(mesa.train)\n\n\n\n#-------------------------------------------------------------------------------------------------------\n\nk <- 5\nn.trials <- 1\nnumber.of.variables <- ncol(mesa.train)-1\nset.seed(seed)\nRMSE.out <- rep(NA, number.of.variables)\n\nx.in <- mesa.train[,-20]\nx.in <- model.matrix(~., x.in)\ny.in <- mesa.train$ACTUAL_13\ndf.in <- cbind(x.in, y.in)\n\n?model.matrix\n\nval.x.in <-model.matrix(~., mesa.val[,-20])\n\n#val.x.in <- mesa.val[,-20]\nval.y.in <- mesa.val$ACTUAL_13\ncomparision <- c()\n\n#-------------------------------------------------------------------------------------------------------\n# ridge\n\nridge.vs.lasso <- 0\nbest.lamda <- c()\n\nfor(i in 1:n.trials){\n  cv.out <- cv.glmnet(x = as.matrix(x.in), y = y.in, alpha = ridge.vs.lasso, nfolds = k ) \n  best.lamda[i] <- cv.out$lambda.min\n}\n\nmean(best.lamda)\nvar(best.lamda)\nbest.lamda.use <- mean(best.lamda)\n\nmodel.fit <- glmnet(x = as.matrix(x.in), y = y.in, alpha = ridge.vs.lasso, lambda = best.lamda.use)\npredicted.use <- predict.glmnet(object = model.fit, newx = val.x.in)\nRMSE.out <- RMSE( actual = val.y.in, predicted = predicted.use)\n\ncomparision$Ridge <- RMSE.out\n\n#-------------------------------------------------------------------------------------------------------\n# lasso\n\nridge.vs.lasso <- 1\nbest.lamda <- c()\n\nfor(i in 1:n.trials){\n  cv.out <- cv.glmnet(x = as.matrix(x.in), y = y.in, alpha = ridge.vs.lasso, nfolds = k ) \n  best.lamda[i] <- cv.out$lambda.min\n}\n\nmean(best.lamda)\nvar(best.lamda)\nbest.lamda.use <- mean(best.lamda)\n\nmodel.fit <- glmnet(x = as.matrix(x.in), y = y.in, alpha = ridge.vs.lasso, lambda = best.lamda.use)\npredicted.use <- predict.glmnet(object = model.fit, newx = val.x.in)\nRMSE.out <- RMSE( actual = val.y.in, predicted = predicted.use)\n\ncomparision$RLasso <- RMSE.out\n\n#-------------------------------------------------------------------------------------------------------\n\n#FULL MODEL --> USE LASSO --> THIS OVER FITS.... need to do a bootstrap to do this statstically rigorously.... come back here....\n\n#model.fit <- glmnet(x = model.matrix(~.,mesa.use[,-20]), y = mesa.use$ACTUAL_13 , alpha = 1, lambda = best.lamda.use)\n\n#-------------------------------------------------------------------------------------------------------\n#code the output...prediction\n\npredict.use <- predict(model.fit, newx = model.matrix(~.,mesa.use[,-20]))\nmesa.predict <- as.data.frame(cbind(mesa.use$PREMISES_CODE, mesa.use$ACTUAL_13, predict.use))\ncolnames(mesa.predict) <- c(\"PREMISES_CODE\", \"ACTUAL_13\", \"PRED_13\")\nmesa.predict <- as.data.frame(output.mesa.use)\n\n#mean(sqrt((output.mesa.use$ACTUAL_13 - output.mesa.use$PRED_13)^2))\n\n#-------------------------------------------------------------------------------------------------------\n\n#OHTER \n\nhead(mesa.other)\n\n#if 1 year ago a 0 +- 3 montsh --> fine \n#if last month 0 --> fine \n\neval <- as.data.frame(cbind(mesa.other$ACTUAL_00==0,  mesa.other$ACTUAL_01==0, mesa.other$ACTUAL_02==0, mesa.other$ACTUAL_12 ==0))\neval.sum <- apply(eval, MARGIN = c(1), FUN = sum )\neval.key <- as.data.frame(\n  cbind(0:4, c(\"Very likely\", \"Likely\", \"Somewhat likely\", \"Unclear\" ,\"Unlikely\"))\n  )\n\neval.key.apply <- factor(rep(NA,length(eval.sum)), levels= c(\"Very likely\", \"Likely\", \"Somewhat likely\", \"Unclear\" ,\"Unlikely\"))\n  \nfor(i in 1:length(eval.sum)){\n  eval.key.apply[i] <- eval.key[eval.sum[i]==eval.key[,1],2]\n}\n\nmesa.other$zero.class <- eval.key.apply\n\n#-------------------------------------------------------------------------------------------------------\n#Join together\n\n#mesa.output <- mesa.raw \n#mesa.predict.full <- c()\n\n\n#for(i in 1:nrow(mesa.predict)){\n#  t <- subset(mesa.output, mesa.output$PREMISES_CODE == mesa.predict$PREMISES_CODE[i])\n#  t <- as.data.frame(cbind(t, mesa.predict$PRED_13[i]))\n#  mesa.predict.full <- as.data.frame(rbind(mesa.predict.full,t))\n#}\n\n#colnames(mesa.predict.full)[length(colnames(mesa.predict.full))] <- \"PRED_13\"\n\n#head(mesa.predict.full)\n\n#nrow(mesa.predict)\n#nrow(mesa.predict.full)\n\n#-------------------------------------------------------------------------------------------------------\n#write out the predictions for analysis\n#DOPE\nlist.test <- list(mesa.other, mesa.raw, mesa.predict,comparision)\n\nsave(mesa.other, mesa.raw, mesa.predict, comparision, file = \"predict_output_with_raw.RData\")\n\n\n\n\n\n\n\n",
    "created" : 1487206894248.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3736332854",
    "id" : "B3EFEFCA",
    "lastKnownWriteTime" : 1487526000,
    "last_content_update" : 1487526000234,
    "path" : "~/Dropbox/Wharton/z Other/1 Water start up/Mesa/Mesa/Meas forcast comparison.R",
    "project_path" : "Meas forcast comparison.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}